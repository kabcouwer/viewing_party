---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=fd5e3ca81314005137fc3ebb81c91437&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:37:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e89d8ce7f3f95990dceb161aeac4f899.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW55-C3
      X-Amz-Cf-Id:
      - q3-UHjTtazEHGa01i_KolqSwffhmrAmfOwAhGmqSN7-qu16wM9-69Q==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:37:06 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=fd5e3ca81314005137fc3ebb81c91437&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:37:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4ca4c23d11f4dd31218362d2f4b766fc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW55-C3
      X-Amz-Cf-Id:
      - UAbB01yT652N5eDSKm_LYLdYhPzWgaGBQFtmvL7UWysqWEpdVeiZeQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:37:06 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=fd5e3ca81314005137fc3ebb81c91437&page=1&query=Earth
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:37:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e3ce71488ee3e7e6111c598300de968b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW55-C3
      X-Amz-Cf-Id:
      - M7FvmtmuVJyyVasP5HSRWUcfE52ro9CMdLAoXkY06XIqmFDdmndS6w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:37:06 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=fd5e3ca81314005137fc3ebb81c91437&page=2&query=Earth
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:37:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e89d8ce7f3f95990dceb161aeac4f899.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW55-C3
      X-Amz-Cf-Id:
      - n51clRmGPVQN8SOdPxeGR_IROOZjSZCaay8NPjuNpEJf5aJyQ6J8HQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:37:07 GMT
recorded_with: VCR 6.0.0
